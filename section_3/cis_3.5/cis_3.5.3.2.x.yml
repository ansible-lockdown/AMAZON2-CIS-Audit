{{ if .Vars.amazon2cis_level1 }}
  {{ if .Vars.amazon2cis_rule_3_5_3_2_1 }}
command:
  iptables_loopback:
    title: 3.5.3.2.1 | Ensure iptables loopback traffic is configured
    exec: cat {{ .Vars.amazon2cis_iptables_boot_config }}
    exit-status: 0
    stdout:
    - '/^-A INPUT -i lo -j ACCEPT/'
    - '/^-A OUTPUT -o lo -j ACCEPT/'
    - '/^-A INPUT -s 127.0.0.0/8 -j DROP/'
    - '!/^-A INPUT -i lo -j DROP/'
    - '!/^-A OUTPUT -o lo -j DROP/'
    - '!/^-A INPUT -s 127.0.0.0/8 -j ACCEPT/'
    meta:
      server: 1
      workstation: NA
      CIS_ID:
      - 3.5.3.2.1
      CISv8:
      - 4.4
      CISv8_IG1: true
      CISv8_IG2: true
      CISv8_IG3: true
  {{ end }}
  {{ if .Vars.amazon2cis_rule_3_5_3_2_2 }}
  iptables_outbound_est:
    title: 3.5.3.2.2 | Ensure iptables outbound and established connections are configured
    exec: cat {{ .Vars.amazon2cis_iptables_boot_config }}
    exit-status: 0
    stdout:
    - '/^-A INPUT -p tcp -m state --state ESTABLISHED -j ACCEPT/'
    - '/^-A INPUT -p udp -m state --state ESTABLISHED -j ACCEPT/'
    - '/^-A INPUT -p icmp -m state --state ESTABLISHED -j ACCEPT/'
    - '/^-A INPUT -p tcp -m tcp --dport 22 -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT/'
    - '/^-A OUTPUT -p tcp -m state --state NEW,ESTABLISHED -j ACCEPT/'
    - '/^-A OUTPUT -p udp -m state --state NEW,ESTABLISHED -j ACCEPT/'
    - '/^-A OUTPUT -p icmp -m state --state NEW,ESTABLISHED -j ACCEPT/'
    - '/^-A OUTPUT -p tcp -m tcp --sport 22 -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT/'
    - '!/^-A (OUTPUT|INPUT) -p tcp -m state --state ESTABLISHED -j REJECT/'
    - '!/^-A (OUTPUT|INPUT) -p udp -m state --state ESTABLISHED -j REJECT/'
    - '!/^-A (OUTPUT|INPUT) -p tcp -m tcp --dport 22 -m conntrack --ctstate NEW,ESTABLISHED -j REJECT/'
    meta:
      server: 1
      workstation: NA
      CIS_ID:
      - 3.5.3.2.2
      CISv8:
      - 4.4
      CISv8_IG1: true
      CISv8_IG2: true
      CISv8_IG3: true
  {{ end }}
  {{ if .Vars.amazon2cis_rule_3_5_3_2_3 }}
  iptables_manual:
   title: 3.5.3.2.3 | Ensure iptables rules exist for all open ports
   exec: echo "Manual - Ensure iptables rules exist for all open ports"
   exit-status: 0
   stdout:
   - '!/^Manual/'
   meta:
      server: 1
      workstation: NA
      CIS_ID:
      - 3.5.3.2.3
      CISv8:
      - 4.4
      CISv8_IG1: true
      CISv8_IG2: true
      CISv8_IG3: true
  {{ end }}
  {{ if .Vars.amazon2cis_rule_3_5_3_2_4 }}
  iptable_def_deny:
    title: 3.5.3.2.4 | Ensure iptables default deny firewall policy
    exec: iptables -L | grep Chain
    exit-status: 0
    stdout:
    - '/^Chain INPUT \(policy (DROP|REJECT)\)/'
    - '/^Chain FORWARD \(policy (DROP|REJECT)\)/'
    - '/^Chain OUTPUT \(policy (DROP|REJECT)\)/'
    - '!/^Chain (INPUT|FORWARD|OUTPUT) \(policy (ACCEPT|RETURN)\)/'
    meta:
      server: 1
      workstation: NA
      CIS_ID:
      - 3.5.3.2.4
      CISv8:
      - 4.4
      CISv8_IG1: true
      CISv8_IG2: true
      CISv8_IG3: true
  {{ end }}
  {{ if .Vars.amazon2cis_rule_3_5_3_2_5 }}
file:
  {{ .Vars.amazon2cis_iptables_boot_config }}:
    title: 3.5.3.2.5 | Ensure iptables rules are saved
    exists: true
    meta:
      server: 1
      workstation: NA
      CIS_ID:
      - 3.5.3.2.6
      CISv8:
      - 4.4
      CISv8_IG1: true
      CISv8_IG2: true
      CISv8_IG3: true
  {{ end }}
  {{ if .Vars.amazon2cis_rule_3_5_3_2_6 }}
service:
  iptables:
    title: 3.5.3.2.5 | Ensure iptables is enabled and running
    enabled: true
    running: true
    meta:
      server: 1
      workstation: NA
      CIS_ID:
      - 3.5.3.2.6
      CISv8:
      - 4.4
      CISv8_IG1: true
      CISv8_IG2: true
      CISv8_IG3: true
  {{ end }}
{{ end }}
